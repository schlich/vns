---
title: "VNS Analysis"
author: "Tyler Schlichenmeyer"
format: 
  dashboard:
    orientation: columns
server: shiny
execute: 
  keep-ipynb: true
---

```{python}
from pathlib import Path

session_paths = Path("../data/BFINAC_VNS").iterdir()
first_session = next(session_paths)
first_trials = first_session.glob("*.parquet")
first_trial = next(first_trials)
```



### {.toolbar}

```{python}
from pathlib import Path
import polars as pl
import os
from icecream import ic
from shiny import render, ui, reactive

import vns


ui.input_select(
    "session",
    "Session",
    choices={
        str(session): vns.Session(path=session).datetime()
        for session in session_paths
    },
    selected=str(first_session)
)

ui.input_select(
    "trial",
    "Trial",
    choices = {str(trial): trial.stem for trial in first_trials},
    selected = str(first_trial)

)

@reactive.effect
def trials():
    session = input.session()
    ui.update_select("trial", choices={str(trial): trial.stem for trial in Path(session).glob("*.parquet") if "trials" not in str(trial)})

```

## Row

```{python}

import plotly.express as px
from shinywidgets import render_plotly

@render_plotly
def cursor():
    trial = input.trial()
    trials = vns.Trial(path=Path(trial))
    return px.line(trials.cursor().collect(), x="t", y=["x", "y"], template="plotly_white")

```